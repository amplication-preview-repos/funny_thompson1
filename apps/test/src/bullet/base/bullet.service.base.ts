/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bullet } from "@prisma/client";

export class BulletServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.BulletCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletCountArgs>
  ): Promise<number> {
    return this.prisma.bullet.count(args);
  }

  async bullets<T extends Prisma.BulletFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletFindManyArgs>
  ): Promise<Bullet[]> {
    return this.prisma.bullet.findMany(args);
  }
  async bullet<T extends Prisma.BulletFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletFindUniqueArgs>
  ): Promise<Bullet | null> {
    return this.prisma.bullet.findUnique(args);
  }
  async createBullet<T extends Prisma.BulletCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletCreateArgs>
  ): Promise<Bullet> {
    return this.prisma.bullet.create<T>(args);
  }
  async updateBullet<T extends Prisma.BulletUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletUpdateArgs>
  ): Promise<Bullet> {
    return this.prisma.bullet.update<T>(args);
  }
  async deleteBullet<T extends Prisma.BulletDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BulletDeleteArgs>
  ): Promise<Bullet> {
    return this.prisma.bullet.delete(args);
  }
}
